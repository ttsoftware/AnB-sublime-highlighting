// [PackageDev] target_format: plist, ext: tmLanguage
{ "name": "AnB",
    "scopeName": "source.AnB",
    "fileTypes": ["AnB"],
    "uuid": "08df971c-e35e-4ef4-8c72-5152cca5c46a",
    "patterns": [
        {
            "match": "(Protocol)|(Types)|(Knowledge)|(Actions)|(Goals)",
            "name": "keyword"
        },
        {
            "match": "(Agent)|(Number)|(Function)|(Symmetric_key)",
            "name": "entity.other.attribute-name"
        },
        {
            "match": "(authenticates)|(on)|(secret between)|(where)",
            "name": "support.class"
        },
        /*{
            "match": "[^a-zA-Z]+((hash)|(sk)|(pk)|(inv))[^a-zA-Z]+",
            "captures": {
                "1": { 
                    "name": "variable.parameter"
                }
            }
        },*/
        {
            "begin": "Agent",
            "beginCaptures": {
                "0": {
                    "name": "variable.other.less"
                }
            },
            "end": ";",
            "patterns": [
                {
                    "match": "C",
                    "name": "variable.other.less"
                }
            ]
        },
        {
            "match": "\\#.*$",
            "name": "comment"
        },
        {
            "match": "(\\-\\>)|(\\:)",
            "name": "source.c++ meta.preprocessor.c.include string.quoted.other.lt-gt.include.c"
        },
        {
            "match": "\\{\\|[a-zA-Z ]+\\|\\}",
            "name": "support.constant"
        }
        /*{
            "match": "\\((([a-zA-Z])([, ]+)?)+\\)",
            "captures": {
                "1": { 
                    "name": "entity.name.function"
                }
            }
        }*/
    ]
}